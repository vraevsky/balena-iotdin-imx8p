From 98e2760752615cb02fffe996bba8724c44fc529e Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Sat, 13 Jul 2024 12:30:16 +0300
Subject: [PATCH 20000/20002] balena: Use pylibfdt/setup.py from 2021.04

Use pylibfdt/setup.py from 2021.04 in order to pass the kirkstone build.

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 scripts/dtc/pylibfdt/setup.py | 67 ++++++-----------------------------
 1 file changed, 10 insertions(+), 57 deletions(-)

diff --git a/scripts/dtc/pylibfdt/setup.py b/scripts/dtc/pylibfdt/setup.py
index 8baae08770..992cdec30f 100755
--- a/scripts/dtc/pylibfdt/setup.py
+++ b/scripts/dtc/pylibfdt/setup.py
@@ -1,13 +1,11 @@
 #!/usr/bin/env python3
-# SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-2-Clause)
 
 """
 setup.py file for SWIG libfdt
 Copyright (C) 2017 Google, Inc.
 Written by Simon Glass <sjg@chromium.org>
 
-This script is modified from the upstream version, to fit in with the U-Boot
-build system.
+SPDX-License-Identifier:	GPL-2.0+ BSD-2-Clause
 
 Files to be built into the extension are provided in SOURCES
 C flags to use are provided in CPPFLAGS
@@ -20,34 +18,14 @@ allows this script to be run stand-alone, e.g.:
     ./pylibfdt/setup.py install [--prefix=...]
 """
 
-from setuptools import setup, Extension
-from setuptools.command.build_py import build_py as _build_py
+from distutils.core import setup, Extension
 import os
 import re
 import sys
 
-try:
-    from setuptools import sic
-except ImportError:
-    pass
-
-srcdir = os.path.dirname(__file__)
-
-with open(os.path.join(srcdir, "../README"), "r") as fh:
-    long_description = fh.read()
-
 # Decodes a Makefile assignment line into key and value (and plus for +=)
 RE_KEY_VALUE = re.compile('(?P<key>\w+) *(?P<plus>[+])?= *(?P<value>.*)$')
 
-def get_top_builddir():
-    if '--top-builddir' in sys.argv:
-        index = sys.argv.index('--top-builddir')
-        sys.argv.pop(index)
-        return sys.argv.pop(index)
-    else:
-        return os.path.join(srcdir, '..')
-
-top_builddir = get_top_builddir()
 
 def ParseMakefile(fname):
     """Parse a Makefile to obtain its variables.
@@ -108,7 +86,7 @@ def GetEnvFromMakefiles():
     makevars = ParseMakefile(os.path.join(basedir, 'libfdt', 'Makefile.libfdt'))
     files = makevars['LIBFDT_SRCS'].split()
     files = [os.path.join(basedir, 'libfdt', fname) for fname in files]
-    files.append('libfdt.i')
+    files.append('pylibfdt/libfdt.i')
     cflags = ['-I%s' % basedir, '-I%s/libfdt' % basedir]
     objdir = ''
     return swig_opts, version, files, cflags, objdir
@@ -118,10 +96,7 @@ progname = sys.argv[0]
 files = os.environ.get('SOURCES', '').split()
 cflags = os.environ.get('CPPFLAGS', '').split()
 objdir = os.environ.get('OBJDIR')
-try:
-    version = sic(os.environ.get('VERSION'))
-except:
-    version = os.environ.get('VERSION')
+version = os.environ.get('VERSION')
 swig_opts = os.environ.get('SWIG_OPTS', '').split()
 
 # If we were called directly rather than through our Makefile (which is often
@@ -132,39 +107,17 @@ if not all((swig_opts, version, files, cflags, objdir)):
 
 libfdt_module = Extension(
     '_libfdt',
-    sources=files,
-    include_dirs=[os.path.join(srcdir, 'libfdt')],
-    library_dirs=[os.path.join(top_builddir, 'libfdt')],
-    swig_opts=swig_opts,
+    sources = files,
+    extra_compile_args = cflags,
+    swig_opts = swig_opts,
 )
 
-class build_py(_build_py):
-    def run(self):
-        self.run_command("build_ext")
-        return super().run()
-
 setup(
     name='libfdt',
-    version=version,
-    cmdclass = {'build_py' : build_py},
-    author='Simon Glass',
-    author_email='sjg@chromium.org',
+    version= version,
+    author='Simon Glass <sjg@chromium.org>',
     description='Python binding for libfdt',
     ext_modules=[libfdt_module],
     package_dir={'': objdir},
-    py_modules=['libfdt'],
-
-    long_description=long_description,
-    long_description_content_type="text/plain",
-    url="https://git.kernel.org/pub/scm/utils/dtc/dtc.git",
-    license="BSD",
-    license_files=["GPL", "BSD-2-Clause"],
-
-    classifiers=[
-        "Programming Language :: Python :: 3",
-        "License :: OSI Approved :: BSD License",
-        "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
-        "Operating System :: OS Independent",
-    ],
-
+    py_modules=['pylibfdt/libfdt'],
 )
-- 
2.17.1

